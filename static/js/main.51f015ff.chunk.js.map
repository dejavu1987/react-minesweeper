{"version":3,"sources":["lib/minesweeper.js","Minesweeper.jsx","App.jsx","index.js"],"names":["Minesweeper","level","this","boardMax","board","Array","fill","map","x","mines","length","newMine","randomMax","includes","push","filledBoard","getFilledBoard","max","Math","floor","random","mine","nw","isNaN","ne","n","sw","se","s","w","e","forEach","addMine","split","c","parseInt","CELL_OPEN","useState","setBoard","cellStates","setCellStates","totalMines","setTotalMines","setBoardMax","useEffect","minesweeper","MinesweeperClass","tempOpenCells","openCell","y","handleCellClick","className","row","cell","onClick","onContextMenu","preventDefault","handleCellContextMenu","App","setLevel","htmlFor","onChange","target","value","type","min","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.51f015ff.chunk.js","sourcesContent":["export default class Minesweeper {\n  constructor(level) {\n    this.boardMax = 5 + level * 2;\n    this.board = new Array(this.boardMax)\n      .fill(\"\")\n      .map((x) => new Array(this.boardMax).fill(\"\"));\n\n    this.mines = [];\n\n    while (this.mines.length < level * level + 5) {\n      const newMine = `${this.randomMax(this.boardMax)},${this.randomMax(\n        this.boardMax\n      )}`;\n      if (!this.mines.includes(newMine)) this.mines.push(newMine);\n    }\n    this.filledBoard = this.getFilledBoard();\n  }\n\n  randomMax(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  // @TODO Optimize?\n  addMine(mine, filledBoard) {\n    filledBoard[mine[0]][mine[1]] = \"üí£\";\n    if (mine[0] > 0) {\n      if (mine[1] > 0) {\n        let nw = filledBoard[mine[0] - 1][mine[1] - 1];\n        if (nw !== \"üí£\") {\n          filledBoard[mine[0] - 1][mine[1] - 1] = !isNaN(nw) ? ++nw : 1;\n        }\n      }\n      if (mine[1] < this.boardMax - 1) {\n        let ne = filledBoard[mine[0] - 1][mine[1] + 1];\n        if (ne !== \"üí£\") {\n          filledBoard[mine[0] - 1][mine[1] + 1] = !isNaN(ne) ? ++ne : 1;\n        }\n      }\n      let n = filledBoard[mine[0] - 1][mine[1]];\n      if (n !== \"üí£\") {\n        filledBoard[mine[0] - 1][mine[1]] = !isNaN(n) ? ++n : 1;\n      }\n    }\n    if (mine[0] < this.boardMax - 1) {\n      if (mine[1] > 0) {\n        let sw = filledBoard[mine[0] + 1][mine[1] - 1];\n        if (sw !== \"üí£\") {\n          filledBoard[mine[0] + 1][mine[1] - 1] = !isNaN(sw) ? ++sw : 1;\n        }\n      }\n      if (mine[1] < this.boardMax - 1) {\n        let se = filledBoard[mine[0] + 1][mine[1] + 1];\n        if (se !== \"üí£\") {\n          filledBoard[mine[0] + 1][mine[1] + 1] = !isNaN(se) ? ++se : 1;\n        }\n      }\n      let s = filledBoard[mine[0] + 1][mine[1]];\n      if (s !== \"üí£\") {\n        filledBoard[mine[0] + 1][mine[1]] = !isNaN(s) ? ++s : 1;\n      }\n    }\n    if (mine[1] > 0) {\n      let w = filledBoard[mine[0]][mine[1] - 1];\n      if (w !== \"üí£\") {\n        filledBoard[mine[0]][mine[1] - 1] = !isNaN(w) ? ++w : 1;\n      }\n    }\n    if (mine[1] < this.boardMax - 1) {\n      let e = filledBoard[mine[0]][mine[1] + 1];\n      if (e !== \"üí£\") {\n        filledBoard[mine[0]][mine[1] + 1] = !isNaN(e) ? ++e : 1;\n      }\n    }\n  }\n\n  getFilledBoard() {\n    const filledBoard = [...this.board];\n    this.mines.forEach((mine) => {\n      this.addMine(\n        mine.split(\",\").map((c) => parseInt(c)),\n        filledBoard\n      );\n    });\n    return filledBoard;\n  }\n}\n","import { useEffect, useState } from 'react';\nimport MinesweeperClass from './lib/minesweeper';\nconst CELL_OPEN = 'open';\nconst CELL_FLAGGED = 'flagged';\n\nexport default function Minesweeper({ level }) {\n  const [board, setBoard] = useState([]);\n  const [cellStates, setCellStates] = useState({});\n  const [totalMines, setTotalMines] = useState(0);\n  const [boardMax, setBoardMax] = useState(0);\n\n  useEffect(() => {\n    const minesweeper = new MinesweeperClass(level);\n    setBoard(minesweeper.filledBoard);\n    setTotalMines(minesweeper.mines.length);\n    setBoardMax(5 + level * 2);\n    setCellStates([]);\n  }, [level]);\n\n  let tempOpenCells = {};\n\n  const openCell = (x, y) => {\n    if (tempOpenCells[`${x},${y}`] !== CELL_OPEN) {\n      tempOpenCells[`${x},${y}`] = CELL_OPEN;\n\n      if (board[y][x] === '') {\n        if (x > 0) {\n          if (y > 0) {\n            openCell(x - 1, y - 1);\n          }\n          if (y < boardMax - 1) {\n            openCell(x - 1, y + 1);\n          }\n          openCell(x - 1, y);\n        }\n        if (x < boardMax - 1) {\n          if (y > 0) {\n            openCell(x + 1, y - 1);\n          }\n          if (y < boardMax - 1) {\n            openCell(x + 1, y + 1);\n          }\n          openCell(x + 1, y);\n        }\n        if (y > 0) {\n          openCell(x, y - 1);\n        }\n        if (y < boardMax - 1) {\n          openCell(x, y + 1);\n        }\n      }\n    }\n  };\n\n  const handleCellClick = (x, y) => {\n    openCell(x, y);\n    setCellStates({ ...cellStates, ...tempOpenCells });\n  };\n\n  const handleCellContextMenu = (x, y) => {\n    setCellStates({\n      ...cellStates,\n      [`${x},${y}`]: CELL_FLAGGED,\n    });\n  };\n\n  return (\n    <div className=\"minesweeper\">\n      <h4>üí£ {totalMines}</h4>\n      <div className=\"board\">\n        {board.map((row, y) => (\n          <div className=\"row\" key={`row-${y}`}>\n            {row.map((cell, x) => (\n              <div\n                key={`cell-${x}-${y}`}\n                className={`col color-${cell} ${\n                  !cellStates[`${x},${y}`] ? 'not-open' : ''\n                }`}\n                onClick={() => handleCellClick(x, y)}\n                onContextMenu={(e) => {\n                  e.preventDefault();\n                  handleCellContextMenu(x, y);\n                }}\n              >\n                {cellStates[`${x},${y}`] &&\n                  (cellStates[`${x},${y}`] === CELL_OPEN ? cell : 'üìç')}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import './styles.css';\nimport Minesweeper from './Minesweeper';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [level, setLevel] = useState(4);\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"\">\n        Select Level:{' '}\n        <input\n          className=\"level-select\"\n          onChange={(e) => setLevel(e.target.value)}\n          type=\"number\"\n          min={1}\n          max={16}\n          value={level}\n        />\n      </label>\n      <Minesweeper level={level} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}